plugins {
    id 'org.springframework.boot' version '2.3.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'application'
	id "com.github.ManifestClasspath" version "0.1.0-RELEASE"
}
apply from: '../gradle/common.gradle'
apply from: '../gradle/docker.gradle'


repositories {
    jcenter()
    mavenCentral()
    flatDir {
        dirs '../gradle/localrepo'
    }
}


ext {
	set('springCloudVersion', "Hoxton.SR6")
}


application {
    mainClassName = 'hu.perit.wsstepbystep.WsstepbystepApplication'
    // Some JVM options already set in common.gradle
    applicationDefaultJvmArgs += ['-Xmx512m', '-Xms32m']
}


sourceCompatibility = 11

dependencies {
	compile project(':spvitamin-core')		
	compile project(':spvitamin-spring-server')
	compile project(':spvitamin-spring-admin')
	compile project(':spvitamin-spring-security')
	compile project(':spvitamin-spring-cloud-feign')
	compile project(':webservice-api')
		
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    integtestCompileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    integtestAnnotationProcessor 'org.projectlombok:lombok'

    // Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    
    // JJWT
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

    // Swagger
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'

    // apache.commons
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'

    // Validation
    implementation 'javax.validation:validation-api'

	// FasterXML
    implementation 'com.fasterxml.jackson.core:jackson-core'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    
    // YAML formatting
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'

    // Slf4J
	implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
	
    // OpenFeign
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation group: 'com.netflix.feign', name: 'feign-jackson', version: '8.18.0'

    // Test framework
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    testImplementation 'org.springframework.security:spring-security-test'
}


dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}


test {
	useJUnitPlatform()
}
integtest {
    useJUnitPlatform()
}

dockerImage() {
	dependsOn 'dockerBackendImage'
}
